--
-- The MIT License
-- 
-- Copyright (c) 2010-2011 Heikki Siltala
-- 
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
-- 
-- The above copyright notice and this permission notice shall be included in
-- all copies or substantial portions of the Software.
-- 
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-- THE SOFTWARE.
--

DROP TABLE IF EXISTS RUN;

CREATE TABLE RUN (
 DT INTEGER NOT NULL PRIMARY KEY
);

--

DROP TABLE IF EXISTS DNA;

CREATE TABLE DNA (
 CLASS TEXT NOT NULL,
 ITEM TEXT NOT NULL,
 DNA TEXT NOT NULL,
 DT INTEGER NOT NULL,
 PRIMARY KEY (CLASS,ITEM)
);

--
                                                  
DROP TABLE IF EXISTS ALBUM;

CREATE TABLE ALBUM (
 ALBUM TEXT NOT NULL PRIMARY KEY,
 NAME_EN TEXT NOT NULL,
 NAME_FI TEXT NOT NULL,
 LENSMODE TEXT NOT NULL,
 ORIGINED INTEGER NOT NULL,
 CREATED INTEGER NOT NULL,                                                                                                                                            
 MODIFIED INTEGER NOT NULL,
 LOCATION_EN TEXT NOT NULL,
 LOCATION_FI TEXT NOT NULL,
 COUNTRY TEXT NOT NULL
);

CREATE UNIQUE INDEX ALBUM_IX1 ON ALBUM (NAME_EN);
CREATE UNIQUE INDEX ALBUM_IX2 ON ALBUM (NAME_FI);

--

DROP TABLE IF EXISTS ORGANIZER;

CREATE TABLE ORGANIZER (
 ALBUM TEXT NOT NULL,
 ORGANIZER_EN TEXT NOT NULL,
 ORGANIZER_FI TEXT NOT NULL
);

CREATE UNIQUE INDEX ORGANIZER_IX1 ON ORGANIZER (ALBUM,ORGANIZER_EN);
CREATE UNIQUE INDEX ORGANIZER_IX2 ON ORGANIZER (ALBUM,ORGANIZER_FI);

--

DROP TABLE IF EXISTS UMBRELLA;

CREATE TABLE UMBRELLA (
 ALBUM TEXT NOT NULL,
 UMBRELLA_EN TEXT NOT NULL,
 UMBRELLA_FI TEXT NOT NULL
);

CREATE UNIQUE INDEX UMBRELLA_IX1 ON UMBRELLA (ALBUM,UMBRELLA_EN);
CREATE UNIQUE INDEX UMBRELLA_IX2 ON UMBRELLA (ALBUM,UMBRELLA_FI);

--

DROP TABLE IF EXISTS FILE;

CREATE TABLE FILE (
 ALBUM TEXT NOT NULL,
 FILE TEXT NOT NULL,
 WIDTH_HR INTEGER NOT NULL,
 HEIGHT_HR INTEGER NOT NULL,
 BYTES_HR INTEGER NOT NULL,
 WIDTH_LR INTEGER NOT NULL,
 HEIGHT_LR INTEGER NOT NULL,
 BYTES_LR INTEGER NOT NULL,
 PRIMARY KEY (ALBUM, FILE)
);

--

DROP TABLE IF EXISTS FLESH;

CREATE TABLE FLESH (
 ALBUM TEXT NOT NULL,
 N INTEGER NOT NULL,
 FILE TEXT NOT NULL
);

CREATE UNIQUE INDEX FLESH_IX1 ON FLESH (ALBUM,N);
CREATE UNIQUE INDEX FLESH_IX2 ON FLESH (ALBUM,FILE);

--

DROP TABLE IF EXISTS EXIF;

CREATE TABLE EXIF (
 ALBUM TEXT NOT NULL,
 FILE TEXT NOT NULL,
 FLEN REAL NULL,
 ETIME_TXT TEXT NULL,
 ETIME_NUM FLOAT NULL,
 FNUM REAL NULL,
 DT INTEGER NULL,
 ISO INTEGER NULL,
 BODY TEXT NULL,
 LENS TEXT NULL,
 PRIMARY KEY (ALBUM, FILE)
);

--

DROP TABLE IF EXISTS EXID;

CREATE TABLE EXID (
 ALBUM TEXT NOT NULL,
 N INTEGER NOT NULL,
 FLEN REAL NULL,
 ETIME_TXT TEXT NULL,
 ETIME_NUM FLOAT NULL,
 FNUM REAL NULL,
 DT INTEGER NULL,
 ISO INTEGER NULL,
 BODY TEXT NULL,
 LENS TEXT NULL,
 PRIMARY KEY (ALBUM, N)
);

--

DROP TABLE IF EXISTS EXIA;

CREATE TABLE EXIA (
 ALBUM TEXT NOT NULL,
 N INTEGER NOT NULL,
 FLEN REAL NULL,
 ETIME_TXT TEXT NULL,
 ETIME_NUM FLOAT NULL,
 FNUM REAL NULL,
 DT INTEGER NULL,
 ISO INTEGER NULL,
 BODY TEXT NULL,
 LENS TEXT NULL,
 PRIMARY KEY (ALBUM, N)
);

--

DROP TABLE IF EXISTS OUT;

CREATE TABLE OUT (
 ALBUM TEXT NOT NULL,
 N INTEGER NOT NULL,
 OUT_EN TEXT NOT NULL,
 OUT_FI TEXT NOT NULL,
 PRIMARY KEY (ALBUM, N)
);

--

DROP TABLE IF EXISTS SNIP;

CREATE TABLE SNIP (
 ALBUM TEXT NOT NULL,
 N INTEGER NOT NULL,
 PRI TEXT NOT NULL,
 SEC TEXT NOT NULL
);

CREATE UNIQUE INDEX SNIP_IX1 ON SNIP (ALBUM,N,PRI,SEC);
CREATE INDEX SNIP_IX2 ON SNIP (PRI,SEC);
CREATE INDEX SNIP_IX3 ON SNIP (PRI);
CREATE INDEX SNIP_IX4 ON SNIP (SEC);

--

DROP TABLE IF EXISTS METARESULT;

CREATE TABLE METARESULT (
 RESULT TEXT PRIMARY KEY NOT NULL
);

--

DROP TABLE IF EXISTS METABREEDER;

CREATE TABLE METABREEDER (
 BREEDER TEXT PRIMARY KEY NOT NULL,
 SITEURL TEXT NOT NULL,
 PHOTOURL TEXT NOT NULL,
 COUNTRY TEXT NOT NULL
);

--
                                
DROP TABLE IF EXISTS METABREED;

CREATE TABLE METABREED (
 SEC TEXT PRIMARY KEY NOT NULL,
 BREED_EN TEXT NOT NULL,
 BREED_FI TEXT NOT NULL,
 PHOTOURL TEXT NOT NULL
);

--

DROP TABLE IF EXISTS METACOUNTRY;

CREATE TABLE METACOUNTRY (
 COUNTRY TEXT PRIMARY KEY NOT NULL,
 COUNTRY_EN TEXT NOT NULL,
 COUNTRY_FI TEXT NOT NULL
);

--

DROP TABLE IF EXISTS METANEWS;

CREATE TABLE METANEWS (
 DT INTEGER PRIMARY KEY NOT NULL,
 TITLE_EN TEXT NOT NULL,
 TEXT_EN TEXT NOT NULL,
 TITLE_FI TEXT NOT NULL,
 TEXT_FI TEXT NOT NULL
);

--

DROP TABLE IF EXISTS METATEXT;

CREATE TABLE METATEXT (
 TAG TEXT PRIMARY KEY NOT NULL,
 TEXT_EN TEXT NOT NULL,
 TEXT_FI TEXT NOT NULL
);

--

DROP TABLE IF EXISTS X;

CREATE TABLE X (
 X INTEGER PRIMARY KEY NOT NULL,
 ALBUM TEXT NOT NULL,
 N INTEGER NOT NULL
);

CREATE UNIQUE INDEX X_IX1 ON X (ALBUM,N);

--
