#summary Test results of the caching subsystem (early testing)
#labels Cache,CHI,SQLite,CHI::Driver::DBI,Perl

= Summary =

The system tests (Files=6, Tests=1126) of an early version of the system were run with different cache settings. Here are the results. Using CHI with CHI::Driver::DBI backend on SQLite located to a standard USB IDE hard disk. Assumably the hard disk characteristics are not important since the data is likely to come from Windows block cache. Times are seconds. The cache file was deleted between the cache mode setting changes. The cache DB file size after the last test run was 7.7 MB.

= Desktop, 4 core i7, Windows 7 64-bit = 

|| *Page* || *Model* || *DB* || *Initial run* || *Second run* || *Performance boost* ||
|| 0 || 0 || 0 || 66 || 66 || 1x   ||
|| 0 || 0 || 1 || 34 || 24 || 2.8x ||
|| 0 || 1 || 0 || 39 || 22 || 3.0x ||
|| 0 || 1 || 1 || 35 || 21 || 3.1x ||
|| 1 || 0 || 0 || 71 || 14 || 4.7x ||
|| 1 || 0 || 1 || 37 || 13 || 5.1x ||
|| 1 || 1 || 0 || 43 || 15 || 4.4x ||
|| 1 || 1 || 1 || 40 || 13 || 5.1x ||

= Laptop, 2 core Celeron, Windows 7 32-bit =

|| *Page* || *Model* || *DB* || *Initial run* || *Second run* || *Performance boost* ||
|| 0 || 0 || 0 || 217 || 213 || 1x  ||
|| 0 || 0 || 1 || 99 || 76 || 2.8x ||
|| 0 || 1 || 0 || 120 || 73 || 2.9x ||
|| 0 || 1 || 1 || 101 || 64 || 3.3x ||
|| 1 || 0 || 0 || 223 || 47 || 4.5x ||
|| 1 || 0 || 1 || 105 || 45 || 4.7x ||
|| 1 || 1 || 0 || 126 || 48 || 4.4x ||
|| 1 || 1 || 1 || 108 || 43 || 5.0x ||

= Comparison between custom Memcached caching vs CHI with file backend =

This compares Memcached caching against file-based caching. The system tests (350) were ran on dev, all caching on (page, model, db). Results: memcached first run 15 s second run 6 s, file (files on USB hd) first run 17 s second run 8 s. It appears that the difference is practically insignificant especially when considering the slow dev environment hd.

 