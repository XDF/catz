#summary Short notes and checklists for service management and service deployment

= Deploy a new version of the service =

*on dev workstation*

  * make sure that you have made at least one database load compared to the version in production (data version must be changed forward), if not then make a pseudo load (loading just meta is simples if no changes then post not needed)
  * roll to the latest database version 
  * clean old database versions from /db (leave only the latest and the latest key file)
  * clean logs from /log
  * check what is in /temp and clean it    
  * check that run.pl has production mode for win and fresh start memcached, run tests, all test should pass, check that the number of test and the time taken seems reasonable: Files=11, Tests=19759, 250 wallclock secs 
  * SVN commit if not yet committed  

*on prod server*

  * detect if the production is running on catz1 or on catz2 (html meta)
  * shutdown the non-prodcution service: cat hypnotoad.pid | xargs kill -TERM
  * check that the production is still up and running :-D     
  * delete all stuff from the non-prod application directory rm -fR *
  * deploy the new version of the application by shipping all folders'n'files (on slow connection consider gzipping the db before shipping and ungzipping it then on dev)
  * set db r/o  
  * run tests on prod, all should pass, check that stats are resonable: Files=11, Tests=19759, 195 wallclock secs

*the switch*
     
  * fire up the service: hypnotoad run.pl 
  * test the service via ssh tunneled port that it appears to work as expected
  * edit nginx config to so that it points to the deployed service
  * test nginx config: nginx t
  * reload nginx by: kill -HUP $( cat /var/run/nginx.pid )   
  * test via the public interface that the service works normally and it is the correct enviroment (enviroment meta tag)
  * shutdown the non-production    
  * change prod to autostart at /etc/rc.local (details of that later)
  * run an incr backup as root . /usr/sbin/backup_incr.sh OR a full backup as root . /usr/sbin/backup_full.sh                    

= Deploy a new version of the data (new SQLite database file with unchanged structure)

 the current implementation doesn't work since the prod has multiple processes that start and stop and might read the text file change / db before the actual switch - in practise this might not matter at all

  * the database structure must be unchanged compared to the current production version or otherwise the production will fail
  * detect if the production is running on catz1 or on catz2 (html meta)
  * ship the database file to the production db folder    
  * set the db file as r/o
  * run the database verify tool (key in core conf)
  * ship the database key file matching the new database
  * delete the old database key file matching the old database in prod
  * wait 10 seconds (auto-detection delay on prod service)
  * check that the new data version is in production and production works                  
    
= Misc random notes =

hypnotoad stop: cat hypnotoad.pid | xargs kill -TERM

Set to start at boot (many ways, this is quick'n'dirty):
   * edit file /etc/rc.local
   * add the following line to the end but before exit 0   
   * su - <user> -c '. <userhome>/perl5/perlbrew/etc/bashrc; cd <userhome>/app/catz1/script; hypnotoad run.pl'
   * 
   *      
       